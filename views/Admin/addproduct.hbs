<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <meta name="description" content="" />
  <meta name="author" content="" />

  {{>adminheaderlinks}}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

</head>

<body style="background-color:rgb(38, 50, 53);">

  <!-- Start wrapper-->
  <div id="wrapper">

    <!--Start sidebar-wrapper-->
    {{>adminsidebar}}
    <!--End sidebar-wrapper-->

    <!--Start topbar header-->
    {{>adminheader}}
    <!--End topbar header-->

    <div class="clearfix"></div>

    <div class="content-wrapper">
      <div class="container-fluid">

        <!--Start Dashboard Content-->


        <div class="container h-100 mb-5">
          <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-12">
              <div class="card" style="border-radius: 15px;">
                <div class="card-body">
                  <h2 class="text-uppercase text-start mb-5">Add Products</h2>

                  <form action="/admin/addproduct" method="post" enctype="multipart/form-data">

                    <div class="form-outline m-lg-5 mb-5 col-lg-10">
                      <label class="form-label text uppercase" for="form3Example1cg">Product Name</label>

                      <div>
                      <input type="text" id="name" onkeyup="validName()" placeholder="Enter the Product name"
                         name="productname" class="form-control form-control-md"
                        required />
                        <span id="names" class="text-danger"></span>
                        </div>

                    </div>
                    


                    {{!-- <input type="number" id="form3Example3cg" name="offerprice"
                      class="form-control form-control-md" value=0 hidden /> --}}


                    <div class="form-outline m-lg-5 mb-5 col-lg-10">
                      <label class="form-label" for="form3Example3cg"> Price</label>
                      <div>
                      <input type="number" id="price" max="9999" placeholder="Enter the Price"
                         name="price" class="form-control form-control-md"
                        required />
                        <span id="prices" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-outline m-lg-5 mb-5 col-lg-10">
                      <label class="form-label" for="form3Example3cg">Stock</label>
                      <div>
                      <input type="number" id="price" max="100"  placeholder="Enter the stock"
                          name="stocks" class="form-control form-control-md"
                        required />
                        <span id="prices" class="text-danger"></span>
                        </div>
                    </div>

                    {{!-- <div class="form-outline m-5 d-sm-flex justify-content-between">
                      <label class="form-label" for="form3Example3cg">Stocks</label>
                      <div>
                      <input type="number" min="0" max="100" id="stock" placeholder="Enter the stock"
                         name="stocks" class="form-control form-control-md"
                        required />
                        <span id="prices" class="text-danger"></span>
                        </div>
                    </div> --}}

                    <div class="form-outline m-lg-5 mb-5 col-lg-10">
                      <label class="form-label col-lg-3" for="form3Example3cg">Category</label>
                     
                      <select style="background-color:rgb(71, 83, 86);color: white; height: 2.5em;"
                        class="form-select form-select-sm col-lg-12" name="category" aria-label=".form-select-sm example">
                        {{#each category}}
                        <option>{{this.category}}</option>
                        {{/each}}
                      </select>
                      
                    </div>


                    <div class="form-outline m-lg-5 mb-5 col-lg-10">
                      <label class="form-label" for="form3Example4cdg">description</label>
                      <div>
                      <textarea type="text" onkeyup="validDescription()" id="description" placeholder="Enter a description"
                         name="description" class="form-control form-control-md"
                        required /></textarea>
                          <span id="descriptions" class="text-danger"></span>
                        </div>
                    </div>


                    <div class="form-outline m-lg-5 mb-5 col-lg-10">
                      <input type="file" class="form-control" id="id_image" name="image"
                        accept="image/*" multiple  required>
                    </div>



                      <div id="image-box0" class="image-container img-fluid m-lg-5 m-sm-2 col-lg-9 col-10" style="max-height: 800px;" >
                      </div>
                      <button class="btn btn-outline-info m-5" id="crop-btn0"
                        style="width: 100px; margin-top: 10px; display: none;" type="button">Crop</button> <button
                        hidden class="btn btn-outline-info m-5" id="confirm-btn" style="width: 100%; margin-top: 10px;"
                        type="submit">Post</button>

                      <div id="image-box1" class="image-container img-fluid m-lg-5 m-sm-2 col-lg-9 col-10" style="max-height: 800px;" >
                      </div>
                      <button class="btn btn-outline-info m-5" id="crop-btn1"
                        style="width: 100px; margin-top: 10px; display: none;" type="button">Crop</button> <button
                        hidden class="btn btn-outline-info m-5" id="confirm-btn" style="width: 100%; margin-top: 10px;"
                        type="submit">Post</button>

                      <div id="image-box2" class="image-container img-fluid  m-lg-5 m-sm-2 col-lg-9 col-10" style="max-height: 800px;" >
                      </div>
                      <button class="btn btn-outline-info m-5" id="crop-btn2"
                        style="width: 100px; margin-top: 10px; display: none;" type="button">Crop</button> <button
                        hidden class="btn btn-outline-info m-5" id="confirm-btn" style="width: 100%; margin-top: 10px;"
                        type="submit">Post</button>

                      <div id="image-box3" class="image-container img-fluid m-lg-5 m-sm-2 col-lg-9 col-10" style="max-height: 800px;" >
                      </div>
                      <button class="btn btn-outline-info m-5" id="crop-btn3"
                        style="width: 100px; margin-top: 10px; display: none;" type="button">Crop</button> <button
                        hidden class="btn btn-outline-info m-5" id="confirm-btn" style="width: 100%; margin-top: 10px;"
                        type="submit">Post</button>
                       

                      {{!-- <div class="form-outline m-5" style="margin-top:30 rem;">
                        <label class="form-label">Images</label>

                        <div class="d-sm-flex justify-content-between">
                          <img id="imgView1" src="" alt="" style="height:6rem ;width:6rem ;margin-bottom: 6em;">
                          <img id="imgView2" src="" alt="" style="height:6rem  ;width:6rem  ;margin-bottom: 6em;">
                          <img id="imgView3" src="" alt="" style="height:6rem  ;width:6rem  ;margin-bottom: 6em;">
                          <img id="imgView4" src="" alt="" style="height:6rem  ;width:6rem  ;margin-bottom: 6em;">
                        </div>
                        <div class="d-sm-flex justify-content-between">
                          <input type="file" name="image" onchange="viewImage1(event)"
                            class="form-control form-control-md" style="width:7.2rem ; height: 3rem;" />
                          <input type="file" name="image" onchange="viewImage2(event)"
                            class="form-control form-control-md" style="width:7.2rem ; height: 3rem;" />
                          <input type="file" name="image" onchange="viewImage3(event)"
                            class="form-control form-control-md" style="width:7.2rem ; height: 3rem;" />
                          <input type="file" name="image" onchange="viewImage4(event)"
                            class="form-control form-control-md" style="width:7.2rem ; height: 3rem;" />
                        </div>
                      </div> --}}




                      <div class="form-outline m-lg-5 mb-5 col-lg-10 col-12">
                        <input type="submit" value="submit"  onclick="return validation()" class="btn btn-success m-lg-5 mb-5 col-lg-10 col-12 ">
                      </div>
                  </form>

                </div>
              </div>
            </div>
          </div>
        </div>





        <!--End Dashboard Content-->

        <!--start overlay-->
        <div class="overlay toggle-menu"></div>
        <!--end overlay-->

      </div>
      <!-- End container-fluid-->

    </div>
    <!--End content-wrapper-->
    <!--Start Back To Top Button-->
    <a href="javaScript:void();" class="back-to-top"><i class="fa fa-angle-double-up"></i> </a>
    <!--End Back To Top Button-->

    <!--Start footer-->
    
    <!--End footer-->

    <!--start color switcher-->

    <!--end color switcher-->

  </div>
  <!--End wrapper-->




  <script src="http://code.jquery.com/jquery-1.9.0.js"></script>
  <script src="http://code.jquery.com/jquery-migrate-1.0.0.js"></script>


  <script>
    // image-box is the id of the div element that will store our cropping image preview
    const imagebox0 = document.getElementById('image-box0')
    const imagebox1 = document.getElementById('image-box1')
    const imagebox2 = document.getElementById('image-box2')
    const imagebox3 = document.getElementById('image-box3')

    // crop-btn is the id of button that will trigger the event of change original file with cropped file.
    const crop_btn0 = document.getElementById('crop-btn0')
    const crop_btn1 = document.getElementById('crop-btn1')
    const crop_btn2 = document.getElementById('crop-btn2')
    const crop_btn3 = document.getElementById('crop-btn3')
    // id_image is the id of the input tag where we will upload the image
    const confirm_btn0 = document.getElementById('confirm-btn0')
    const confirm_btn1 = document.getElementById('confirm-btn1')
    const confirm_btn2 = document.getElementById('confirm-btn2')
    const confirm_btn3 = document.getElementById('confirm-btn3')

    const input = document.getElementById('id_image')

    input.addEventListener('change', () => {
      // Getting image file object from the input variable
      const img_data0 = input.files[0]
      const img_data1 = input.files[1]
      const img_data2 = input.files[2]
      const img_data3 = input.files[3]
      console.log('img_data0+img_data1+img_data2+img_data3')
      console.log(img_data0)
      console.log('img_data0+img_data1+img_data2+img_data3')
      // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
      // The new object URL represents the specified File object or Blob object.
      const url0 = URL.createObjectURL(img_data0)
      const url1 = URL.createObjectURL(img_data1)
      const url2 = URL.createObjectURL(img_data2)
      const url3 = URL.createObjectURL(img_data3)


      // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
      imagebox0.innerHTML = `<img src="${url0}" id="image0" style="width:100%;">`
      imagebox1.innerHTML = `<img src="${url1}" id="image1" style="width:100%;">`
      imagebox2.innerHTML = `<img src="${url2}" id="image2" style="width:100%;">`
      imagebox3.innerHTML = `<img src="${url3}" id="image3" style="width:100%;">`

      // Storing that cropping view image in a variable
      const image0 = document.getElementById('image0')
      const image1 = document.getElementById('image1')
      const image2 = document.getElementById('image2')
      const image3 = document.getElementById('image3')

      // Displaying the image box
      imagebox0.style.display = 'block'
      imagebox1.style.display = 'block'
      imagebox2.style.display = 'block'
      imagebox3.style.display = 'block'
      // Displaying the Crop buttton
      document.getElementById('crop-btn0').style.display = 'block'
      document.getElementById('crop-btn1').style.display = 'block'
      document.getElementById('crop-btn2').style.display = 'block'
      document.getElementById('crop-btn3').style.display = 'block'
      // Hiding the Post button



      cropper(img_data0, image0, 0, crop_btn0, imagebox0, crop_btn0)
      cropper(img_data1, image1, 1, crop_btn1, imagebox1, crop_btn1)
      cropper(img_data2, image2, 2, crop_btn2, imagebox2, crop_btn2)
      cropper(img_data3, image3, 3, crop_btn3, imagebox3, crop_btn3)

      // Creating a croper object with the cropping view image
      // The new Cropper() method will do all the magic and diplay the cropping view and adding cropping functionality on the website
      // For more settings, check out their official documentation at https://github.com/fengyuanchen/cropperjs
      let container = new DataTransfer();
      let fileInputElement = document.getElementById('id_image');



      function cropper(img_data, image, index, crop_btn, imagebox, crop_btn) {

        const cropper = new Cropper(image, {
          autoCropArea: 1,
          viewMode: 1,
          scalable: false,
          zoomable: false,
          movable: false,
          minCropBoxWidth: 200,
          minCropBoxHeight: 200,
        })

        // When crop button is clicked this event will get triggered
        crop_btn.addEventListener('click', () => {
          // This method coverts the selected cropped image on the cropper canvas into a blob object
          cropper.getCroppedCanvas().toBlob((blob) => {

            // Gets the original image data


            // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
            let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
            // Create a new container

            // Add the cropped image file to the container
            container.items.add(file);

            fileInputElement.files = container.files

            // Replace the original image file with the new cropped image file



            // Hide the cropper box
            imagebox.style.display = 'none'
            // Hide the crop button
            crop_btn.style.display = 'none'

          });
        });
      }


    });

  </script>




  {{!--
  <script defer src="https://cdn.crop.guide/loader/l.js?c=RWRZPY"></script> --}}

  <script defer src="https://cdn.crop.guide/loader/l.js?c=TXSZKK"></script>
  <script>
    function viewImage1(event) {
      document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
    }

    function viewImage2(event) {
      document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
    }

    function viewImage3(event) {
      document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
    }

    function viewImage4(event) {
      document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
    }
  </script>

  {{>adminscriptlinks}}

  <script src="http://code.jquery.com/jquery-1.9.0.js"></script>
  <script src="http://code.jquery.com/jquery-migrate-1.0.0.js"></script>




</body>

</html>



<script>
        

        // validation

        var Name = document.getElementById('names')
        var Description = document.getElementById('descriptions')
        var Password = document.getElementById('passwords')
        var Price = document.getElementById('prices')
             
        function validName() {
            
            const name = document.getElementById('name').value;
            if (name == "") {
                Name.innerHTML = 'Enter the product Name'
                return false
            }
            if (!name.match(/^[a-zA-Z\s-, ]+$/)) {
                Name.innerHTML = 'Numbers and symbols are not allowed'
                return false
            }
            if(name.length < 3){
                Name.innerHTML = "Name must be three characters long"
                return false
            }
            Name.innerHTML = null
            return true
        }

        function validDescription() {
            
            const name = document.getElementById('description').value;
            if (name == "") {
                Description.innerHTML = 'Enter the  Description'
                return false
            }
            if (!name.match(/^[a-zA-Z\s-, ]+$/)) {
                Description.innerHTML = 'Numbers and symbols are not allowed'
                return false
            }
            if(name.length < 3){
                Description.innerHTML = "Description must be three characters long"
                return false
            }
            Description.innerHTML = null
            return true
        }


        
        function validPrice() {
            const phone = document.getElementById('price').value
            if (phone == "") {
                Price.innerHTML = "Enter the price"
                return false
            }
            if (!phone.match(/^\d{4}$/)) {
                Price.innerHTML = "maximum Price value is 9999"
                return false
            }
            Price.innerHTML = null
            return true
        }
       
        function validation() {
            if (!validDescription() && !validName() && !validPassowrd() && !validPrice()) {
                return false
            } else if (!validDescription() || !validName() || !validPassowrd() || !validPrice() ) {
                return false
            }else { return true }
        }
    </script>























